[user]
	name = Corey Frang
	email = gnarf@gnarf.net

[alias]
 pretty-diff = !node /Users/gnarf/node/pretty-diff/pretty-diff.js
 gist-diff = !node /Users/gnarf/node/pretty-diff/gist-diff.js
 feature = flow feature
 st = status -sb
 ci = commit
 cm = commit -am
 br = branch
 co = checkout
 df = diff
 lp = log -p
 who = shortlog -n -s --no-merges
 undo = reset --hard
 lc = log ORIG_HEAD.. --stat --no-merges
 lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
 lf = log --pretty=fuller
 cleanup = !git gc && git remote prune origin
 fork = remote add -f
 squash = merge --squash
	pr = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
	pr-clean = "!git for-each-ref refs/heads/pr/* --format=\"%(refname)\" | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
 pp = format-patch -U8 --stdout
 ff = merge --ff-only
	ap = !git add -N ${1:-.} && git add -p $1 && git status
	spr = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull-requests/$1/from:pr/$1 && git checkout pr/$1; }; f"
	b = rev-parse --abbrev-ref HEAD
	authors = "!f() { git ls-tree -r -z --name-only HEAD -- $1 | xargs -0 -n1 git blame --line-porcelain HEAD |grep  \"^author \"|sort|uniq -c|sort -nr ; }; f"

[core]
	autocrlf = input
excludesfile = "/Users/gnarf/.gitexcludes"
[credential]
	helper = store
[color]
	ui = auto
[push]
	default = simple
